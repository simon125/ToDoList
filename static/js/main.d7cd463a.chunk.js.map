{"version":3,"sources":["components/AddItem.js","components/Item.js","components/List.js","data/data.js","App.js","index.js"],"names":["AddItem","value","onChange","onSubmit","onClickEnter","type","onKeyPress","e","onClick","Item","id","text","List","items","handleClick","list","map","item","isVisible","data","App","useState","setValue","setItems","key","counter","length","newItem","subjects","push","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAceA,EAdC,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAC5C,OACE,gCACE,uBACEC,KAAK,OACLC,WAAY,SAACC,GAAD,OAAOH,EAAaG,IAChCN,MAAOA,EACPC,SAAU,SAACK,GAAD,OAAOL,EAASK,MAE5B,uBAAOF,KAAK,SAASJ,MAAM,QAAQO,QAAS,kBAAML,WCAzCM,EATF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,KAAMH,EAAc,EAAdA,QACxB,OACE,qCACE,6BAAcG,GAALD,GACT,wBAAQF,QAAS,kBAAMA,EAAQE,IAA/B,2BCcSE,EAhBF,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,YAAaV,EAAmB,EAAnBA,aAC5BW,EAAOF,EAAMG,KAAI,SAACC,GAAD,OACrBA,EAAKC,UACH,cAAC,EAAD,CACEd,aAAcA,EACdI,QAASM,EAETJ,GAAIO,EAAKP,GACTC,KAAMM,EAAKN,MAFNM,EAAKP,IAIV,QAGN,OAAO,6BAAKK,KCfDI,EAAO,CAClB,CACET,GAAI,EACJC,KAAM,YACNO,WAAW,GAGb,CACER,GAAI,EACJC,KAAM,YACNO,WAAW,GAGb,CACER,GAAI,EACJC,KAAM,YACNO,WAAW,ICmDAE,EA9DH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTpB,EADS,KACFqB,EADE,OAEUD,mBAASF,GAFnB,mBAETN,EAFS,KAEFU,EAFE,KAiDhB,OACE,gCACE,cAAC,EAAD,CACEnB,aArBmB,SAACG,GACxB,GAAc,UAAVA,EAAEiB,IAAiB,CACrB,IAAIC,EAAUZ,EAAMA,EAAMa,OAAS,GAAGhB,GAGhCiB,EAAU,CACdjB,KAHFe,EAIEd,KAAMV,EACNiB,WAAW,GAGPU,EAAQ,YAAOf,GACrBe,EAASC,KAAKF,GACdJ,EAASK,GACTN,EAAS,MAQPrB,MAAOA,EACPE,SAvCe,WACnB,IAAIsB,EAAUZ,EAAMA,EAAMa,OAAS,GAAGhB,GAGhCiB,EAAU,CACdjB,KAHFe,EAIEd,KAAMV,EACNiB,WAAW,GAGPU,EAAQ,YAAOf,GACrBe,EAASC,KAAKF,GACdJ,EAASK,GACTN,EAAS,KA2BLpB,SAnDe,SAACK,GACpBe,EAASf,EAAEuB,OAAO7B,UAoDhB,cAAC,EAAD,CAAMY,MAAOA,EAAOC,YAjDJ,SAACJ,GACnB,IAAIkB,EAAQ,YAAOf,GACnBe,EAASlB,GAAIQ,WAAY,EAEzBK,EAASK,UCZbG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d7cd463a.chunk.js","sourcesContent":["const AddItem = ({ value, onChange, onSubmit, onClickEnter }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        onKeyPress={(e) => onClickEnter(e)}\r\n        value={value}\r\n        onChange={(e) => onChange(e)}\r\n      />\r\n      <input type=\"submit\" value=\"Dodaj\" onClick={() => onSubmit()} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddItem;\r\n","const Item = ({ id, text, onClick }) => {\r\n  return (\r\n    <>\r\n      <li key={id}>{text}</li>\r\n      <button onClick={() => onClick(id)}>Usu≈Ñ</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import Item from \"./Item\";\r\n\r\nconst List = ({ items, handleClick, onClickEnter }) => {\r\n  const list = items.map((item) =>\r\n    item.isVisible ? (\r\n      <Item\r\n        onClickEnter={onClickEnter}\r\n        onClick={handleClick}\r\n        key={item.id}\r\n        id={item.id}\r\n        text={item.text}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return <ul>{list}</ul>;\r\n};\r\n\r\nexport default List;\r\n","export const data = [\r\n  {\r\n    id: 0,\r\n    text: \"Zadanie 1\",\r\n    isVisible: true,\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    text: \"Zadanie 2\",\r\n    isVisible: true,\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    text: \"Zadanie 3\",\r\n    isVisible: true,\r\n  },\r\n];\r\n","import { useState } from \"react\";\nimport AddItem from \"./components/AddItem\";\nimport List from \"./components/List\";\nimport { data } from \"./data/data\";\n\nconst App = () => {\n  const [value, setValue] = useState(\"\");\n  const [items, setItems] = useState(data);\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleClick = (id) => {\n    let subjects = [...items];\n    subjects[id].isVisible = false;\n\n    setItems(subjects);\n  };\n\n  const handleSubmit = () => {\n    let counter = items[items.length - 1].id;\n    counter++;\n\n    const newItem = {\n      id: counter,\n      text: value,\n      isVisible: true,\n    };\n\n    const subjects = [...items];\n    subjects.push(newItem);\n    setItems(subjects);\n    setValue(\"\");\n  };\n\n  const handleEnterClick = (e) => {\n    if (e.key === \"Enter\") {\n      let counter = items[items.length - 1].id;\n      counter++;\n\n      const newItem = {\n        id: counter,\n        text: value,\n        isVisible: true,\n      };\n\n      const subjects = [...items];\n      subjects.push(newItem);\n      setItems(subjects);\n      setValue(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <AddItem\n        onClickEnter={handleEnterClick}\n        value={value}\n        onSubmit={handleSubmit}\n        onChange={handleChange}\n      />\n      <List items={items} handleClick={handleClick} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}